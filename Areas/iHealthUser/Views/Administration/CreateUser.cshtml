@using System.Web.Optimization
@using InnDocs.iHealth.Web.UI.Models
@model InnDocs.iHealth.Web.UI.Models.LoginAndSignUp
@{
    LoginAndSignUp obj = new LoginAndSignUp();
    List<SelectListItem> Countries = obj.Countries();
    List<SelectListItem> Stypes = obj.Stypes();
}
<link href="http://code.jquery.com/ui/1.10.0/themes/base/jquery-ui.css" rel="stylesheet" />
<script type="text/javascript">
    $('#dob2').datepicker({
        yearRange: "-110:+0",
        changeYear: true,
        changeMonth: true,
        maxDate: new Date()
    });
    $("#phnumber").keydown(function (event) {
        // Allow: backspace, delete, tab, escape, and enter
        if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 ||
        // Allow: Ctrl+A
    (event.keyCode == 65 && event.ctrlKey === true) ||
        // Allow: home, end, left, right
    (event.keyCode >= 35 && event.keyCode <= 39)) {
            // let it happen, don't do anything
            return;
        }
        else {
            // Ensure that it is a number and stop the keypress
            if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105) || ($(this).val().length >= 10)) {
                event.preventDefault();
            }
        }
    });

    $("#pincode").keydown(function (event) {
        // Allow: backspace, delete, tab, escape, and enter
        if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 ||
        // Allow: Ctrl+A
    (event.keyCode == 65 && event.ctrlKey === true) ||
        // Allow: home, end, left, right
    (event.keyCode >= 35 && event.keyCode <= 39)) {
            // let it happen, don't do anything
            return;
        }
        else {
            // Ensure that it is a number and stop the keypress
            if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105) || ($(this).val().length >= 6)) {
                event.preventDefault();
            }
        }
    });
</script>
@Scripts.Render("~/bundles/ajaxfns")
@using (Ajax.BeginForm("Register", "Administration", new AjaxOptions() { HttpMethod = "POST", OnSuccess = "closeModal", OnFailure = "displayError", OnBegin = "loading" }, new { style = "width: 400px; height: 500px; overflow-y: scroll;overflow-x: hidden" }))
{
    @Html.ValidationSummary(true)

    <div id="register" style="padding: 10px;">
        <div id="rhead" style="border-bottom: 1px solid rgb(218,221,226);">
            <h3>
                Registration Details</h3>
        </div>
        <div id="rbody" class="registration_details">
            <ul>
                <li>@Html.TextBoxFor(model => model.RegUser.FirstName, new { @placeholder = "User Name", title = "Desired Name", @class = "logintxts" })
                    @Html.ValidationMessageFor(model => model.RegUser.FirstName)
                </li>
                <li>@Html.TextBoxFor(model => model.RegUser.EmailId, new { @placeholder = "Email address", title = "Your valid Email Address", @class = "logintxts", pattern = @"\w+([-+.’]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*" })
                    @Html.ValidationMessageFor(model => model.RegUser.EmailId)</li>
                <li>@Html.PasswordFor(model => model.RegUser.Password, new { @placeholder = "Password", title = "Password", @class = "logintxts" })
                    @Html.ValidationMessageFor(model => model.RegUser.Password)</li>
                <li>@Html.PasswordFor(model => model.RegUser.ConfirmPassword, new { @placeholder = "Re-enter password", title = "Password", @class = "logintxts" })
                    @Html.ValidationMessageFor(model => model.RegUser.ConfirmPassword)</li>
                <li>@Html.TextBoxFor(model => model.RegUser.DOB, new { @placeholder = "Your Date of birth in MM/DD/YYYY", title = "MM/DD/YYYY", @class = "logintxts", id = "dob2", pattern = @"(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.]\d\d\d\d" })
                    @Html.ValidationMessageFor(model => model.RegUser.DOB)</li>
                <li>@Html.TextBoxFor(model => model.RegUser.PhoneNumber, new { @placeholder = "Phone Number", id = "phnumber", title = "Your Phone Number", @class = "logintxts" })
                    @Html.ValidationMessageFor(model => model.RegUser.PhoneNumber)</li>
                <li>@Html.RadioButtonFor(model => model.RegUser.Gender, true, new { @checked = "checked" })&nbsp;
                    Male &nbsp;&nbsp;
                    @Html.RadioButtonFor(model => model.RegUser.Gender, false)&nbsp; Female</li>
                <li>@Html.DropDownListFor(model => model.RegUser.Country, Countries, new { @class = "Reg_Details_select" })</li>
                <li style="width: 97%;">@Html.TextBoxFor(model => model.RegUser.Pincode, new { @placeholder = "Pin/Zip Code", id = "pincode", title = "Your area Pin/Zip Code", @class = "Reg_Details_select" })
                    @Html.ValidationMessageFor(model => model.RegUser.Pincode)</li>
                <li class="labelnormal">
                    <div style="float: right; width: 40%;">
                        @Html.RadioButtonFor(model => model.RegUser.IsGroupUser, true)&nbsp; Group user
                    </div>
                    <div style="float: left; width: 40%;">
                        @Html.RadioButtonFor(model => model.RegUser.IsGroupUser, false, new { @checked = "checked" })&nbsp;
                        Single user
                    </div>
                </li>
                <li class="labelnormal">Subscription type:</li>
                <li>@Html.DropDownListFor(model => model.RegUser.SubscriptionType, Stypes, new { @class = "logintxts", style = "margin:0; width:93% !important;" })</li>
                <li class="labelnormal" id="freeuser">@Html.CheckBoxFor(model => model.RegUser.FreeUser, new { onchange = "changefreeuser()" })
                    &nbsp; Free user</li>
                <li class="labelnormal" id="tryuser">@Html.CheckBoxFor(model => model.RegUser.TryIt, new { onchange = "changetryuser()" })
                    &nbsp; Try it</li>
                <li class="labelnormal">
                    <div id="id1" style="display: inline-block; width: 100%; color: rgb(89,89,89); font-size: 12px;
                        font-weight: bold">
                        <div style="float: left; font: normal 13px 'Tauri',sans-serif; color: black; width: 40%;">
                            <input type="checkbox" onchange="changepromocode()" />&nbsp; Promo code
                        </div>
                        <div id="id2" style="display: inline-block; width: 50%; height: 28px;">
                            @Html.TextBoxFor(model => model.RegUser.PromoCodeValue, new { @placeholder = "Promo code", @class = "logintxts", style = "display:none" })
                            @Html.ValidationMessageFor(model => model.RegUser.PromoCodeValue)
                        </div>
                    </div>
                </li>
                <li style="width: 94%;">
                    <input type="button" value="close" class="graygrad" onclick="$.modal.close();" />
                    <input id="btnSubmit" type="submit" class="greengrad" value="Submit" /></li>
                <li></li>
            </ul>
        </div>
    </div>
}
<script>
    (function (i, s, o, g, r, a, m) {
        i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
            (i[r].q = i[r].q || []).push(arguments)
        }, i[r].l = 1 * new Date(); a = s.createElement(o),
  m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

    ga('create', 'UA-47299480-1', 'bumpdocs.com');
    ga('send', 'pageview');

</script>

